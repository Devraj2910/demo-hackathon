import { Card } from "../domain/entities/card";

export interface CardRepository {
  /**
   * Find a card by ID
   */
  findById(id: string): Promise<Card | null>;
  
  /**
   * Find all cards with optional filtering
   */
  findAll(filters?: {
    userId?: string;
    createdFor?: string;
    teamId?: string;
    fromDate?: Date;
    toDate?: Date;
  }): Promise<Card[]>;
  
  /**
   * Find cards created by a specific user
   */
  findByUser(userId: string): Promise<Card[]>;
  
  /**
   * Find cards created for a specific user
   */
  findByCreatedFor(userId: string): Promise<Card[]>;
  
  /**
   * Find the latest N cards
   */
  findLatest(limit: number): Promise<Card[]>;
  
  /**
   * Save a card (create or update)
   * For new cards, ID will be auto-generated by the database
   */
  save(card: Card): Promise<Card>;
  
  /**
   * Delete a card by ID
   */
  delete(id: string): Promise<boolean>;
} 